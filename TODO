DONE

	Simplify stats from client -> server, eg. remove mean, min, max RTT.

	Make session update packet self contained so it has the SDK version in it.

	Fix wire packet calculations so they include the 8 byte packet hash.

	Don't sign the whole packet, only sign the first 32 bytes. Much cheaper computationally.

	Server init packet should include datacenter name as a string.

	Optimized platform id serialization.

	Optimized user flags serialization.

	Optimized flags serialization.

	Remove "GetSignData" processing entirely.

	Add scaffolding for programmatic packet signing.

	Removed some old code around a previous implementation of wakeup callback.

	Get tests failing for the sign upgrade request and upgrade confirm packets so I know the codepath is active.

	Get sign and verify working for upgrade request and upgrade confirm packets.

	Add scaffolding for signing packets between the server and the backend.

	Get unit tests passing for backend packets with signature verification.

	Normalize all the backend and relay facing packet numbers so they don't conflict 3.x in any way (assume relay will have to support both old and new packets for a while).

	Server should try to resolve hostname and initialize every 5 - 10 minutes (randomized) if it cannot resolve or initialize. Otherwise, we run the risk of losing game servers forever until they are restarted.

	Removed server routing public key from server update packet.

	Session update packet now contains routing public key. This makes the session update self contained. It does not require the server map.

	Implement session data that is passed up in the session update request packet, and passed back down in the session update response packet.

	Added session data to session entry on the server.

	Add a test for session update and session response packets with session data included at max size.

	Removed session flags (unused). Saves 1 byte in header, route token and continue token.

	Pass the session data up to the backend in the session update packet.

	Store the session data in the session entry from the session response packet.

TODO

	----------------

	When a client falls back to direct, keep doing pings to backend saying it's still there. 

	We need to be able to measure when packets fallback to direct, vs. having them just disappear.

	They should however, stop doing any near relay pings or anything like that though...

	----------------

	Session update should not be a cached packet, but instead should have the retry count included in the packet itself.

	This is useful for the backend so we can count how many retries are occuring.

	----------------
