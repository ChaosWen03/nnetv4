DONE

	It does reproduce without relays, just leave it for a while:

	-----------------------------
	server: 127.0.0.1:32202
	-----------------------------
	server: 127.0.0.1:32202
	session: dfab85ba9373c91e
	error: not a network next packet (220)
	error: not a network next packet (220)
	error: not a network next packet (220)
	error: not a network next packet (220)
	error: not a network next packet (220)
	error: not a network next packet (220)
	-----------------------------
	server: 127.0.0.1:32202
	error: not a network next packet (140)
	-----------------------------
	(nil)
	error: not a network next packet (140)
	error: not a network next packet (140)
	error: not a network next packet (140)
	error: not a network next packet (140)
	error: not a network next packet (140)
	error: not a network next packet (140)

	--------------------------------

	These must be server update or session update packets. Nothing else is being sent to the backend.

	Could it be retries of session updates?

	But how would that make a server go away... must be server update packets not getting through?

	Or a memory trash and the packet hash key gets changed? WUT

	But how can these be sent through to the backend, without tripping the code to check if network next packet on write backend packet?

	It seems it is sending through correctly, but somehow the packet is not verifing it.

	Look at all places packets are sent to backend, in case there are some resend caches that aren't updated.

	Everything seems to be covered, and I can't seem to catch the sender or receiver in having any problems with the packet signature.

	Only thing I can think of now is to print out packets sent to the backend, and print out packets received on the backend.

	It really looks like the packet is getting truncated by 10 bytes for some reason.

	Check sender side...

	Seems to be sending out correct.

	What the fuck is going on?!

	Could it be threading related, to do with a session timing out, and fucking up the session data mid packet send?

TODO

	I can see two possibilities:

		1. Threading issue caused by timing out session

		2. Memory trash issue, where timing out session trashes memory somehow.

	Really difficult to identify #1, but I can write solid code to identify #2 if it is occuring.











	--------------------------------

	When no customer public key is specified on the client, print this out and say falling back to direct only.

	--------------------------------

	When no customer private key is specified, on the server, print this out and say, falling back to direct only.

	--------------------------------

	We really should have a functional test that verifies payload client -> server direct, upgraded direct, and next.

	I mean FFS we could break game payload and not know...

	--------------------------------

	There must be a functional test to verify bandwidth limiting.

	--------------------------------

	Add counters to verify next pings and pongs are working.

	--------------------------------

	Add counters to verify direct pings and pongs are working.

	--------------------------------

	Add counters to verify near relay ping and pong are working.

	--------------------------------

	Check counters for pings/pongs to make sure they are as expected in functional tests.

	--------------------------------

	Fuzz test with client and server localhost with random direct packets w. random lengths.

	Meant to check stability of our protocols against random data.

	Worth running overnight. Add test.

	--------------------------------

	Add memory guard buffers to help catch memory trashes (suspected from Velan).

	--------------------------------

	Get the win64 testbed up and running debug and release.

	Get the win64 soak test running inside the win64 testbed.

	Run soak test for 1 hr on windows.

	--------------------------------

	Get the soak test running on ps4.

	Run soak test for 1 hr on ps4.

	--------------------------------

	Get the soak test running on x1.

	Run soak test for 1 hr on x1.

	--------------------------------

	From Velan:

	"Xbox One seems to have asymmetric alloc/free, it attempted to free something using the global context that wasn't allocated with the global context."

	Find this and fix it.

	--------------------------------

	Find a way to automatically determine what datacenter we are running in.

	eg. either public IP address range for bare metal, or server-side code that detects when you are in a cloud.

	Environment variable setting should always remain available as a fallback.

	--------------------------------

	Would be good to track the client and server packets sent, so we can do packet loss as a % calculation, when games send different rates of packets.

	--------------------------------

	Re-add the client and server tests with ports, once I enable the ports on X1 in my own manifest...

	--------------------------------

	Find a way to get the X1 testing going within a UE4 plugin context.

	There is weird stuff with the ipv4 as ipv6 that needs to be tested.

	Also need to test the port binding running in the context of UE4.

	--------------------------------

	"Hey Glenn, the distro we'll be using is CentOS. Would it be possible for you to provide us with the plugin for both versions 7 and 8?"

	PUBG need Linux plugin versions for CentOS 7 and 8.

	--------------------------------

	Build the iOS testbed and verify working on my iPad Pro or with emulator.

	--------------------------------
