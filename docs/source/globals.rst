
globals
=======

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

next_config_t
-------------

Configuration struct for the Network Next SDK.

.. code-block:: c++

	struct next_config_t
	{
	    char hostname[256];
	    char customer_public_key[256];
	    char customer_private_key[256];
	    int socket_send_buffer_size;
	    int socket_receive_buffer_size;
	    bool disable_network_next;
	    bool disable_tagging;
	};

**Fields:**

- **hostname** - The hostname for the backend the Network Next SDK is talking to. Typically set to "prod.networknext.com" with your own customer account, or "dev.networknext.com" with the SDK test account.

- **customer_public_key** - The customer public key as a base64 encoded string.

- **customer_private_key** - The customer public key as a base64 encoded string.

- **socket_send_buffer_size** - The size of the socket send buffer in bytes.

- **socket_receive_buffer_size** - The size of the socket receive buffer in bytes.

- **disable_network_next** - Set this to true to disable Network Next entirely and always send packets across the public internet.

- **disable_tagging** - Set this to true to disable DOCSIS 3.1 packet tagging.

next_default_config
-------------------

Sets default configuration values.

.. code-block:: c++

	void next_default_config( next_config_t * config );

Blah blah blah.

- Default value for x
- Default value for y
- etc.

next_init
---------

Initializes the Network Next SDK.

.. code-block:: c++

	int next_init( void * context, next_config_t * config );

Blah blah blah.

next_term
---------

Shuts down the Network Next SDK.

.. code-block:: c++

	void next_term();

Blah blah blah.

next_time
---------

Gets the current time in seconds.

.. code-block:: c++

	double next_time();

Blah blah blah.

next_sleep
----------

Sleep for some amount of time.

.. code-block:: c++

	void next_sleep( double time_seconds );

Blah blah.

next_printf
-----------

Log level aware printf.

.. code-block:: c++

	void next_printf( const char * format, ... );

	void next_printf( int level, const char * format, ... );

Blah blah.

next_assert
-----------

Assert.

.. code-block:: c++

	void next_assert( bool condition );

Blah blah.

next_quiet
----------

Enable/disable network next logs entirely.

.. code-block:: c++

	void next_quiet( bool flag );

next_log_level
--------------

Sets the Network Next log level.

.. code-block:: c++

	void next_log_level( int level );

Blah blah.

next_log_function
-----------------

Sets a custom log function.

.. code-block:: c++

	void next_log_function( void (*function)( int level, const char * format, ... ) );

Blah blah.

next_assert_function
--------------------

Set a custom assert handler.

.. code-block:: c++

	void next_assert_function( void (*function)( const char * condition, const char * function, const char * file, int line ) );

Blah Blah.

next_allocator
--------------

Sets a custom allocator.

.. code-block:: c++

	void next_allocator( void * (*malloc_function)( void * context, size_t bytes ), void (*free_function)( void * context, void * p ) );

Blah blah.

next_user_id_string
-------------------

Helper function to convert a legacy uint64_t user id to a string.

.. code-block:: c++

	const char * next_user_id_string( uint64_t user_id, char * buffer );

Blah.

next_is_network_next_packet
---------------------------

Checks if a packet was generated by Network Next.

.. code-block:: c++

	bool next_is_network_next_packet( const uint8_t * packet_data, int packet_bytes );

Blah.
