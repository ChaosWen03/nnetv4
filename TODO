DONE

	Fixed. Stupid golang slices. =p

	Make sure programming team can work monday. That means, make sure they don't have 3.4.5 in their SDK folder... done.

	OK. Next thing to do is to implement memory sentinels all over the place.

	Start with the server internal. Implement the system. Run it in soak...

	Verify sentinel triggers on modification of data.
	
	Add verifications for the sentinels at all functions in server internal.

	Soak test needs to be extended to include a test customer private and public key.

	Very soak test passes with sentinels.

	Extend soak test to have very specific packet payloads that can be independently verified.

	Contents and length must be able to be verified.

	haha lol and the payload stuff trips. Stupid bug in the raw direct packet. Fixed.

	Soak test now passes with packet generation and verification. If the soak test runs, we can be confident that we have the 

	Extend the functional test client and server to include the packet generate and detect.

	Functional backend won't pass until main codebase packets are upgraded to support blake2 prefix. Moving on.

	Extend to cover sentinels to objects used by the server internal.

	next_queue_t

	next_session_manager_t

	next_session_entry_t

	next_pending_session_manager_t

	next_pending_session_entry_t

TODO

	--------------------------------

	next_replay_protection_t

	--------------------------------

	next_packet_loss_tracker_t

	--------------------------------

	Hook up server verify to verify sub-objects.

	--------------------------------

	When 100% coverage is reached with server internal, run soak test again and leave it running for a few hours.

	--------------------------------

	Get the valgrind thing going again so we can run soak under valgrind for a few hours.

	--------------------------------





















	--------------------------------

	Extend the soak test to run with global and per-client and per-server contexts.

	Inside these contexts, have a std::map and track all allocations. When it frees, make sure all allocations are free.

	Implement safety checks at the end of each freed buffer.

	Basically we now have our own valgrind now.

	--------------------------------

	When no customer public key is specified on the client, print this out and say falling back to direct only.

	(don't print out customer key found, dumb)

	--------------------------------

	When no customer private key is specified, on the server, print this out and say, falling back to direct only.

	(don't print out customer key found, dumb)

	--------------------------------

	We really should have a functional test that verifies payload client -> server direct, upgraded direct, and next.

	I mean FFS we could break game payload and not know...

	--------------------------------

	There must be a functional test to verify bandwidth limiting.

	--------------------------------

	Add counters to verify next pings and pongs are working.

	--------------------------------

	Add counters to verify direct pings and pongs are working.

	--------------------------------

	Add counters to verify near relay ping and pong are working.

	--------------------------------

	Check counters for pings/pongs to make sure they are as expected in functional tests.

	--------------------------------

	Fuzz test with client and server localhost with random direct packets w. random lengths.

	Meant to check stability of our protocols against random data.

	Worth running overnight. Add test.

	--------------------------------

	Add memory guard buffers to help catch memory trashes (suspected from Velan).

	--------------------------------

	Get the win64 testbed up and running debug and release.

	Get the win64 soak test running inside the win64 testbed.

	Run soak test for 1 hr on windows.

	--------------------------------

	Get the soak test running on ps4.

	Run soak test for 1 hr on ps4.

	--------------------------------

	Get the soak test running on x1.

	Run soak test for 1 hr on x1.

	--------------------------------

	From Velan:

	"Xbox One seems to have asymmetric alloc/free, it attempted to free something using the global context that wasn't allocated with the global context."

	Find this and fix it.

	--------------------------------

	Find a way to automatically determine what datacenter we are running in.

	eg. either public IP address range for bare metal, or server-side code that detects when you are in a cloud.

	Environment variable setting should always remain available as a fallback.

	--------------------------------

	Would be good to track the client and server packets sent, so we can do packet loss as a % calculation, when games send different rates of packets.

	--------------------------------

	Re-add the client and server tests with ports, once I enable the ports on X1 in my own manifest...

	--------------------------------

	Find a way to get the X1 testing going within a UE4 plugin context.

	There is weird stuff with the ipv4 as ipv6 that needs to be tested.

	Also need to test the port binding running in the context of UE4.

	--------------------------------

	"Hey Glenn, the distro we'll be using is CentOS. Would it be possible for you to provide us with the plugin for both versions 7 and 8?"

	PUBG need Linux plugin versions for CentOS 7 and 8.

	--------------------------------

	Build the iOS testbed and verify working on my iPad Pro or with emulator.

	--------------------------------
