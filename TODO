DONE

TODO

	--------------------------------

	Extend the soak test to run with global and per-client and per-server allocator contexts.

	Inside these contexts, have a std::map and track all allocations. When it frees, make sure all allocations are free.

	Implement sentinels at the beginning and after each allocated block of memory.

	Basically we now have our own valgrind now...

	--------------------------------

	When no customer public key is specified on the client, print this out and say falling back to direct only.

	(don't print out customer key found, dumb)

	--------------------------------

	When no customer private key is specified, on the server, print this out and say, falling back to direct only.

	(don't print out customer key found, dumb)

	--------------------------------

	Build with G++ and fix warning reported re. non-POD data struct cleared with memset 0.

	--------------------------------

	There must be a functional test to verify bandwidth limiting.

	--------------------------------

	Add counters to verify next pings and pongs are working.

	--------------------------------

	Add counters to verify direct pings and pongs are working.

	--------------------------------

	Add counters to verify near relay ping and pong are working.

	--------------------------------

	^--- functional tests for each of the ping cases above.

	--------------------------------

	Get the win64 testbed up and running debug and release.

	Get the win64 soak test running inside the win64 testbed.

	Run soak test for 1 hr on windows.

	--------------------------------

	Get the soak test running on ps4.

	Run soak test for 1 hr on ps4.

	--------------------------------

	Get the soak test running on x1.

	Run soak test for 1 hr on x1.

	--------------------------------
