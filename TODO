DONE

	Simplify stats from client -> server, eg. remove mean, min, max RTT.

	Make session update packet self contained so it has the SDK version in it.

	Fix wire packet calculations so they include the 8 byte packet hash.

	Don't sign the whole packet, only sign the first 32 bytes. Much cheaper computationally.

	Server init packet should include datacenter name as a string.

	Optimized platform id serialization.

	Optimized user flags serialization.

	Optimized flags serialization.

	Remove "GetSignData" processing entirely.

	Add scaffolding for programmatic packet signing.

TODO

	Are there actually any signed packets that aren't between server <-> backend?

	Only the upgrade request packet and the upgrade confirm packet.

	These are part of key exchange.

	Apparently there is no unit test that serializes these packets via read/write, because they *should* be asserting out right now.

	----------------

	Sign and verify packets between client <-> server the new way.

	Sign and verify packets between server <-> backend the new way.

	Implement session data that is passed up in the session update request packet, and passed back down in the session update response packet.

	Server should try to resolve hostname and initialize every 5 - 10 minutes (randomized), if it cannot resolve or initialize. Otherwise, we run the risk of losing game servers forever until they are restarted.

	Normalize all the backend and relay facing packet numbers so they don't conflict 3.x in any way (assume relay will have to support both old and new packets for a while now).
